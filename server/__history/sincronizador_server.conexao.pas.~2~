unit sincronizador_server.conexao;

interface

uses
  FireDAC.Stan.Intf,
  FireDAC.Stan.Option,
  FireDAC.Stan.Error,
  FireDAC.UI.Intf,
  FireDAC.Phys.Intf,
  FireDAC.Stan.Def,
  FireDAC.Stan.Pool,
  FireDAC.Stan.Async,
  FireDAC.Phys,
  FireDAC.VCLUI.Wait,
  FireDAC.Stan.Param,
  FireDAC.DatS,
  FireDAC.DApt.Intf,
  FireDAC.DApt,
  FireDAC.Comp.Client,
  Data.DB,
  FireDAC.Comp.DataSet,
  FireDAC.Phys.PGDef,
  FireDAC.Phys.PG,
  sincronizador_server.interfaces;

type
  TConexao = class(TInterfacedObject, IConexao)
  private
    FConn: TFDConnection;
    FQuery: TFDQuery;
    FDriver: TFDPhysPgDriverLink;
    FConf: IConfiguracao;

    constructor Create;
    destructor Destroy; override;
  public
    class function New: IConexao;

    function SQL(Value: String): IConexao;
    function Params(aParams: String; aValue: Variant): IConexao;
    function Open: IConexao;
    function ExecSQL: IConexao;
    function DataSet: TDataSet;
  end;

implementation

uses
  sincronizador_server.configuracao;

constructor TConexao.Create;
begin
  FConn := TFDConnection.Create(nil);
  FQuery := TFDQuery.Create(FConn);
  FDriver := TFDPhysPgDriverLink.Create(FConn);
  FConf := TConfiguracao.New;

  FConn.Params.DriverID := FConf.DriverId;
  FConn.Params.Database := FConf.DataBase;
  FConn.Params.Add('Server='+FConf.Server);
  FConn.Params.UserName := FConf.UserName;
  FConn.Params.Password := FConf.Password;
  FConn.Params.Add('PORT='+FConf.Port);
  FConn.Params.Add('CharacterSet='+FConf.CharacterSet);
  FConn.Params.Add('MetaDefSchema='+FConf.MetaDefSchema);
  FConn.Connected;
end;

function TConexao.DataSet: TDataSet;
begin

end;

destructor TConexao.Destroy;
begin

  inherited;
end;

function TConexao.ExecSQL: IConexao;
begin

end;

class function TConexao.New: IConexao;
begin

end;

function TConexao.Open: IConexao;
begin

end;

function TConexao.Params(aParams: String; aValue: Variant): IConexao;
begin

end;

function TConexao.SQL(Value: String): IConexao;
begin

end;

end.
